@model SpeakerSendMailModel

@{
    ViewBag.Title = T("Navigation_Speakers");
}
@section navigation {
    <ul class="menu">
        <li>@Html.ActionLink("Details", "Details", new {Model.Id})</li>
        <li>@Html.ActionLink(T("Speaker_SessionList"), "List", "SpeakerSession", new {speakerId = Model.Id}, null)</li>
        <li>@Html.ActionLink(T("Speaker_Help"), "Help", new {Model.Id})</li>
    </ul>
}
<h2>Sprecher-EMail für @T("Speaker_Details_Title", @Model.FirstName, @Model.LastName)</h2>
@Html.ValidationSummary()
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(c=>c.Id)
        <div class="editor-label"><label for="Template">Vorlage wählen</label></div>
    <div class="editor-field sendmail">
        @Html.DropDownList("Template", Model.TemplateList)</div>

    <div class="editor-label"><label for="Subject">Betreff</label></div>
    <div class="editor-field sendmail">
        @Html.TextBoxFor(c=>c.Subject)</div>
    <div class="editor-label"><label for="Body">Text</label></div>
    <div class="editor-field  sendmail">

        @Html.TextAreaFor(c=>c.Body, 40, 90, null)
    </div>

    <button type="submit">E-Mail absenden</button>
}

 @section scripts {
     <script src="@Url.Content("~/js/SpeakerSendMail.js")" type="text/javascript"></script>
     <script type="text/javascript">
         new SendMail("@Model.Id", "@Url.Action("GetTemplate")");
     </script>
 }
